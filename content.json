{"meta":{"title":"LiuQianglong's Blog","subtitle":"我的学习笔记","description":"关于网络、AWS、Python的学习笔记","author":"LiuQianglong","url":"https://liuqianglong.com"},"pages":[],"posts":[{"title":"Cisco StackWise 简介","slug":"Cisco-StackWise-简介","date":"2021-06-17T01:59:29.000Z","updated":"2021-06-17T02:27:18.917Z","comments":true,"path":"Cisco-StackWise-简介.html","link":"","permalink":"https://liuqianglong.com/Cisco-StackWise-%E7%AE%80%E4%BB%8B.html","excerpt":"","text":"1、什么是StackWiseStackWise是思科的堆叠技术，直译过来可以叫智能堆叠，StackWise技术分为硬堆叠和软堆叠两种。 硬堆叠技术使用专用的堆叠线连接成一个环形拓扑结构，最多能堆叠八台交换机，实现最大480G的带宽，硬堆叠一般也可以叫做StackWise-480。目前思科Catalyst 9200/9300 支持硬堆叠，从支持的型号可以看出硬件堆叠的使用场景一般是大型网络的分布层（Distribution）或者是小型网络的核心层。 软堆叠（StackWise Virtual）是思科用于取代VSS（Virtual Switching System）的一个新技术，使用StackWise Virtual技术可以通过10G/40G接口连接两台交换机形成一台虚拟交换机。除了能提供与VSS一样的能力外，还能提供可编程性、应用可见性、MPLS等特性，可以理解为VSS的加强版。目前思科Catalyst 9000系列 9400/9500/9600 均支持StackWise Virtual。从支持的型号可以看出StackWise Virtual一般用在网络的核心层。 StackWise Virtual与StackWise-480除了在网络中的使用场景不太一样之外，StackWise Virtual因为使用10G/40G接口进行连接，所以可以将距离更远的两个交换机连接起来。而StackWise-480需要使用堆叠线进行连接，堆叠线规格有50cm/1m/3m，所以决定了使用StackWise-480技术的交换机往往在同一个机架。 2、StackWise 的优势无论是StackWise-480还是StackWise Virtual都可以简化网络、提供冗余、简化管理。另外StackWise-480还提供了可扩展性。 简化网络：使用StackWise技术之后，网络拓扑结构上只有一台逻辑上的交换机。 提供冗余：交换机之间会通过Stateful Switchover(SSO)进行状态信息同步，交换机可以实现热备。 简化管理：提供统一的管理平面进行管理、配置和排错。便于维护配置统一性，当你你登录不同交换机的控制台所看到的是相同的管理平台。 3、企业园区网高可用架构在进行企业园区网络高可用设计时，可以考虑如下设计，在接入层或者分布层使用StackWise-480技术进行堆叠，在核心层使用StackWise Virtual技术。 上面的物理接线，在逻辑上就是下面的拓扑接口。 从下面的两个图片可以看出，在使用StackWise之后，配置设备数量急剧减少，设计时需要考虑的很多二层问题就被解决了。 4、StackWise-480 介绍思科交换机最多支持8台交换机进行堆叠，堆叠能达到的最大速率为480G，堆叠后就如同一台高端口密度的交换机。堆叠组内选取一台交换机作为Active，主要负责控制层面的信息处理，就好比是C9400中的supervisor板卡；而其他组成员就好比是高端交换机中的I/O modules板卡，主要负责数据层面的流量转发。 4.1、StackPowerStackPower能让堆叠中的电源作为公共资源，在所有交换机之间共享。思科StackPower将交换机中安装的各个电源统一起来，创建一个电源池，哪里有需要就将电源引向哪里。 StackPower线，两头和堆叠线非常相似，StackPower线会更加粗一些，堆叠线是是3根细线合在一起的。 4.2、Extended Fast Software Upgrade（xFSU，扩展的快速软件升级）在交换机上进行软件升级期间，用户流量将被中断，直到新软件完全启动。对于运行关键应用程序的客户来说，流量停机是一个需要考虑的问题。xFSU是一个软件增强过程，旨在减少软件重载或升级操作期间的流量停机时间。xFSU使用优雅重启功能（也称为Cisco Nonstop Forwarding(NSF)），确保交换机配置和路由协议在软件升级或重载期间保持不受影响。目前xFSU升级只适用于Catalyst 9300和Catalyst 9300L交换机。 129300# install add file flash:cat9k_iosxe.BLD_V1610 activate reloadfast commit9300# Reload Fast 想要进一步了解，可以看这里参考文档 4.3、StackWise-480配置StackWise-480其实直接插上堆叠线就可以正常工作了，但是为了后期维护方便，需要提前设计好主用和备用的交换机。 默认配置交换机的优先级（1-15）默认为1，越高越好 打开你要使其成为Active状态的第一个开关的电源 打开你要作为Standby成员的第二个成员的电源，然后打开其余成员的电源 要将成员添加到现有堆栈中，请先插入堆栈电缆，然后打开交换机电源 尽可能避免堆栈合并和堆栈拆分 下面是堆叠线 StackWise-480参考文档 5、StackWise Virtual 介绍5.1、Stackwise Virtual 角色 角色只有两种，Active和Standby。 初始状态基于两个条件进行选举，priority数值小的优先；系统mac数值小的优先 角色不会发生抢占。 5.2、Stackwise Virtual 部署注意事项 交换机需要具有相同的物理型号、相同的IOS版本、相同类型的授权。 引擎必须位于两个交换机的同一插槽中（例如，使用9407时，两个机箱的插槽3）。 StackWise Virtual Link（SVL）需要在Supervisor上建立10/40G连接。 每个机箱仅支持一个引擎来做StackWise Virtual。如果你安装了两个引擎，则第二个引擎powered off状态。 VLAN 4094由StackWise Virtual使用，因此不能用于任何其他目的。 手动完成StackWise Virtual的配置，双活检测DAD（dual-active detection）和SVL（StackWise Virtual Link），并且在每个步骤之后都需要重新启动交换机。 每个机箱SVL最多可具有80GE（8x10GE或2x40GE）或50GE（2x25GE）的组合带宽。 思科参考文档 5.3、StackWise Virtual 配置1、首先在交换机上创建相同StackWise domain ID。配置优先级，优先级数值低的成为Active。 1234567891011121314151617SW01#switch 1 priority 5 SW01(config)#stackwise-virtualSW01(config-stackwise-virtual)#domain 10SW01#wr memSW01#reload---SW02#switch 1 priority 10SW02#switch 1 renumber 2SW02(config)#stackwise-virtualSW02(config-stackwise-virtual)#domain 10SW02#wr memSW02#reload 2、配置SVL接口 12345678910111213SW01(config)#interface rage TenGigabitEthernet1&#x2F;3&#x2F;0&#x2F;1 - 2SW01(config-if)stackwise-virtual link 1SW01(config-if)#endSW01#wr memSW01#reload---SW02(config)#interface rage TenGigabitEthernet1&#x2F;3&#x2F;0&#x2F;1 - 2SW02(config-if)stackwise-virtual link 1SW02(config-if)#endSW02#wr memSW02#reload 3、配置DAD（dual-active detection）接口，DAD可以加快故障检测时间，这是可选步骤。 1234567891011SW01(config)#interface GigabitEthernet1&#x2F;1&#x2F;0&#x2F;1SW01(config-if)stackwise-virtual dual-active-detectionSW01#wr memSW01#reload---SW02(config)#interface GigabitEthernet1&#x2F;1&#x2F;0&#x2F;1SW02(config-if)stackwise-virtual dual-active-detectionSW02#wr memSW02#reload 4、最后可以通过下面命令来验证结果 12345SW01#show stackwise-virtual switch 1SW01#show stackwise-virtual linkSW01#show stackwise-virtual bandwidthSW01#show stackwise-virtual neighborsSW01#show stackwise-virtual dual-active-detection 配置参考文档 5.4、In-Service Software Upgrade (ISSU 服务中软件升级 )5.4.1、什么是ISSU？ISSU提供了一种机制，在交换机继续转发流量的情况下进行软件升级和降级，ISSU利用NSF和SSO功能在升级或降级期间继续转发流量，切换的速度小于200ms。Catalyst 3850和Catalyst 9000系列做Stackwise-Virtual之后可以支持ISSU，具有双引擎的Catalyst 9400/9600独立支持ISSU，另外思科最新的无线控制C9800系列也可以支持ISSU进行升级。这里可以查看版本兼容列表。 5.4.2、ISSU 工作流程下面图片简要描述了C9K在ISSU升级过程中的步骤： 镜像已经存在于Active和Standby。 Standby镜像开始升级。 Standby升级成功之后会自动切换为Active，此时原先的Active已经成为Standby并且开始升级。 Standby升级完成，升级完成后其实引擎的主备切换了。 5.4.3、C9500 StackWise-Virtual ISSU 配置步骤关于详细的升级步骤以及注意事项参考这个文档 升级步骤关键有三步 123C9500#install add file flash:cat9k-universalk9.SPA.16.09.03.BETA.E1.SSA.bin.bin C9500#install activate issuC9500#install commit 三个步骤也可以简化可以一条命令执行 1C9500#install add file flash:cat9k-universalk9.SPA.16.09.03.BETA.E1.SSA.bin.bin activate ISSU commit 6、参考链接 思科C9K系列StackWise Virtual白皮书：https://www.cisco.com/c/en/us/products/collateral/switches/catalyst-9000/nb-06-cat-9k-stack-wp-cte-en.html StackWise-480 白皮书：https://www.cisco.com/c/en/us/products/collateral/switches/catalyst-9300-series-switches/white-paper-c11-741468.html Cisco StackWise Virtual Q&amp;A：https://www.cisco.com/c/dam/en/us/products/collateral/switches/catalyst-3850-series-switches/q-and-a-c67-738577.pdf What is the Cisco Stackwise Virtual Technology? 6 FAQ You Need to Know!：https://blog.router-switch.com/2019/12/what-is-the-cisco-stackwise-virtual-technology/ Extended Fast Software Upgrade on Catalyst 9300 Platform：https://www.cisco.com/c/en/us/support/docs/switches/catalyst-9300-series-switches/216837-extended-fast-software-upgrade-on-cataly.html Stackwise实物接线：https://www.youtube.com/watch?v=5bimzoJJkK8 思科堆栈配置-如何从堆栈中移除交换机：https://www.youtube.com/watch?v=-J9wtau25sY","categories":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}],"tags":[{"name":"Cisco","slug":"Cisco","permalink":"https://liuqianglong.com/tags/Cisco/"},{"name":"StackWise","slug":"StackWise","permalink":"https://liuqianglong.com/tags/StackWise/"}],"keywords":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}]},{"title":"ISP Failover PAT配置","slug":"ISP-Failover-PAT配置","date":"2021-06-16T12:08:19.000Z","updated":"2021-06-17T02:14:57.769Z","comments":true,"path":"ISP-Failover-PAT配置.html","link":"","permalink":"https://liuqianglong.com/ISP-Failover-PAT%E9%85%8D%E7%BD%AE.html","excerpt":"","text":"1、介绍为了实现出口ISP链路的冗余，可以在出口路由器上连接两条不同的ISP线路，获得链路冗余的同时也带来新的问题，即如何决定流量送往哪个ISP。一般来说有两种流量选择方式：负载均衡和主备切换。 负载均衡：出口网关配置两条默认路由分别到ISP1和ISP2，去往ISP的流量会通过这两条等价的默认路由进行负载均衡，可以通过ip cef load-sharing algorithm命令修改负载均衡的算法，参见文档。负载均衡方式的优势在于更加充分的利用两条线路带宽，当其中一个ISP不可用时，故障切换速度更快。 主备切换：利用浮动静态路由和SLA结合来实现主用到ISP1，当ISP1出现故障时能自动切换到ISP2。主备切换的优势在于出口公网IP固定，线路更加稳定。但是备用链路的带宽长期是闲置的。当主用ISP1可用时，流量不会走备用ISP2，但是你可以通过添加明细路由到ISP2改变流量选路，也可以通过PRB抓取特定的源IP地址通过备用ISP2出去。 另外需要注意的是这种NAT的切换需要结合route-map来配置。 2、拓扑图这里使用EVE-NG的CSR1Kv搭建的实验环境，使用GNS3和其他型号路由器对实验结果没有影响。 3、设备初始化这里初始化所有设置的IP地址，以及内部路由配置，出口网关的路由和NAT在下一个部分配置。 CSR1（Inside-Router） 12345678910111213host Inside-Router！interface Loopback0 ip address 172.20.10.1 255.255.255.0！interface GigabitEthernet1 ip address 172.20.1.1 255.255.255.0！router ospf 10 network 172.20.1.0 0.0.0.255 area 0 network 172.20.10.0 0.0.0.255 area 0！ip route 0.0.0.0 0.0.0.0 172.20.1.254 CSR2（GW） 12345678910111213host GW！interface GigabitEthernet1 ip address 172.20.1.254 255.255.255.0!interface GigabitEthernet2 ip address 52.83.1.1 255.255.255.0!interface GigabitEthernet3 ip address 52.83.2.1 255.255.255.0!router ospf 10 network 172.20.1.0 0.0.0.255 area 0 CSR3（ISP-Router） 12345678910host ISP-Router！interface GigabitEthernet1 ip address 52.84.1.1 255.255.255.0!interface GigabitEthernet2 ip address 52.83.1.2 255.255.255.0!interface GigabitEthernet3 ip address 52.83.2.2 255.255.255.0 CSR4（ISP-Service） 123456host ISP-Service！interface GigabitEthernet1 ip address 52.84.1.2 255.255.255.0!ip route 0.0.0.0 0.0.0.0 52.84.1.1 4、负载均衡配置这里配置去往ISP1和ISP2的默认路由为等价路由，需要利用route-map来结合NAT进行配置。 CSR1（Inside-Router） 12345678910111213141516171819202122232425262728293031interface GigabitEthernet1 ip address 172.20.1.254 255.255.255.0 ip nat inside!interface GigabitEthernet2 ip address 52.83.1.1 255.255.255.0 ip nat outside!interface GigabitEthernet3 ip address 52.83.2.1 255.255.255.0 ip nat outsideip access-list extended NAT_ACL permit ip 172.20.0.0 0.0.255.255 any log!route-map NAT_ISP1 permit 10 match ip address NAT_ACL match interface GigabitEthernet2!route-map NAT_ISP2 permit 10 match ip address NAT_ACL match interface GigabitEthernet3ip nat pool ISP1_Pool 52.83.1.100 52.83.1.110 netmask 255.255.255.0ip nat pool ISP2_Pool 52.83.2.100 52.83.2.110 netmask 255.255.255.0ip nat inside source route-map NAT_ISP1 pool ISP1_Pool overloadip nat inside source route-map NAT_ISP2 pool ISP2_Pool overloadip route 0.0.0.0 0.0.0.0 52.83.1.2ip route 0.0.0.0 0.0.0.0 52.83.2.2 查看网关的出口路由，去往ISP1和ISP2的等价路由。 1234GW#show ip routeS* 0.0.0.0&#x2F;0 [1&#x2F;0] via 52.83.2.2 [1&#x2F;0] via 52.83.1.2O 172.20.10.1&#x2F;32 [110&#x2F;2] via 172.20.1.1, 1d02h, GigabitEthernet1 内部路由器测试 12345678910Inside-Router#ping 52.84.1.2Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:.!!!!Inside-Router#ping 52.84.1.2 source lo0Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:Packet sent with a source address of 172.20.10.1.!!!! 查看转换表项，可以看到不同的源IP从不同的ISP链路出去。 12345GW#show ip nat translationsPro Inside global Inside local Outside local Outside globalicmp 52.83.2.100:1 172.20.10.1:48 52.84.1.2:48 52.84.1.2:1icmp 52.83.1.100:1 172.20.1.1:47 52.84.1.2:47 52.84.1.2:1Total number of translations: 2 通过show ip cef exact-route 命令可以用来预测源到目的IP使用的下一跳接口和IP地址。 12345GW#show ip cef exact-route 172.20.1.1 52.84.1.2172.20.1.1 -&gt; 52.84.1.2 &#x3D;&gt;IP adj out of GigabitEthernet2, addr 52.83.1.2GW#show ip cef exact-route 172.20.10.1 52.84.1.2172.20.10.1 -&gt; 52.84.1.2 &#x3D;&gt;IP adj out of GigabitEthernet3, addr 52.83.2.2 5、主备配置5.1、主备切换这里配置ISP1为主用，利用SLA监控ISP1直连地址，当ISP1不可用时路由切换到ISP2上。 CSR2（GW），注意这里为了试验需要将sla的参数调的更小了，生产环境下需要自己设计这个参数。frequency表示这里每3秒发送一次探针，timeout表示发送探针后1秒后还未接受到那么认为这个探针超时了，threshold表示连续两次超时后达到阈值。所以结合上面的参数，当52.83.1.2不可达后，最多需要6秒sla会达到阈值。（注意，这里需要先删除上面指向ISP2的路由之后再添加管理距离更大的路由） 12345678910111213ip sla 10 icmp-echo 52.83.1.2 source-ip 52.83.1.1 threshold 2 timeout 1000 frequency 3ip sla schedule 10 life forever start-time nowtrack 10 ip sla 10 reachabilityno ip route 0.0.0.0 0.0.0.0 52.83.1.2ip route 0.0.0.0 0.0.0.0 52.83.1.2 track 10ip route 0.0.0.0 0.0.0.0 52.83.2.2 10 GW查看路由表和SLA状态 12GW#show ip routeS* 0.0.0.0&#x2F;0 [1&#x2F;0] via 52.83.1.2 123456789GW#show ip sla summaryIPSLAs Latest Operation SummaryCodes: * active, ^ inactive, ~ pendingID Type Destination Stats Return Last (ms) Code Run-----------------------------------------------------------------------*10 icmp-echo 52.83.1.2 RTT&#x3D;12 Over thresh 0 seconds ago old 内部路由器ping测试 12345678910Inside-Router#ping 52.84.1.2Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:.!!!!Inside-Router#ping 52.84.1.2 source lo0Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:Packet sent with a source address of 172.20.10.1.!!!! GW查看转换表项，可以看到流量都是从ISP1出去。 12345GW#show ip nat translationsPro Inside global Inside local Outside local Outside globalicmp 52.83.1.100:1 172.20.1.1:49 52.84.1.2:49 52.84.1.2:1icmp 52.83.1.100:2 172.20.10.1:50 52.84.1.2:50 52.84.1.2:2Total number of translations: 2 CSR3（ISP-Router)，关闭G2端口，模拟ISP1故障。 12ISP-Router(config)#interface g2ISP-Router(config-if)#shutdown GW上查看sla状态变为Down，默认路由切换到了ISP2上。 1*Jun 16 07:53:00.039: %TRACK-6-STATE: 10 ip sla 10 reachability Up -&gt; Down 12GW#show ip routeS* 0.0.0.0&#x2F;0 [1&#x2F;0] via 52.83.2.2 Inside-Router重新发起流量测试 1234567891011Inside-Router#ping 52.84.1.2Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:!!!!!Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 13&#x2F;18&#x2F;34 msInside-Router#ping 52.84.1.2 source lo0Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:Packet sent with a source address of 172.20.10.1!!!!! GW查看NAT转换表项，流量都从ISP2出去。 12345GW#show ip nat translationsPro Inside global Inside local Outside local Outside globalicmp 52.83.2.100:2 172.20.10.1:55 52.84.1.2:55 52.84.1.2:2icmp 52.83.2.100:1 172.20.1.1:54 52.84.1.2:54 52.84.1.2:1Total number of translations: 2 5.2、使用明细路由控制出口ISP在上面的主备切换模式下，所有流量都通过ISP1出去，如果你需要指定去往某些特定IP的地址从ISP2出去，可以通过配置明细路由来实现。 恢复ISP-Router G2号接口 12ISP-Router(config)#int g2ISP-Router(config-if)#no shutdown 去往52.84.1.2/32的地址通过ISP2访问。 1GW(config)#ip route 52.84.1.2 255.255.255.255 52.83.2.2 在Inside路由器上ping测试到52.84.1.1和52.84.1.2 1234567891011Inside-Router#ping 52.84.1.1Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.1, timeout is 2 seconds:!!!!!Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 10&#x2F;12&#x2F;18 msInside-Router#ping 52.84.1.2Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:!!!!!Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 13&#x2F;20&#x2F;46 ms 查看转换表项，看到去往52.84.1.2通过ISP2出去 12345GW#show ip nat translationsPro Inside global Inside local Outside local Outside globalicmp 52.83.1.100:1 172.20.1.1:58 52.84.1.1:58 52.84.1.1:1icmp 52.83.2.100:1 172.20.1.1:59 52.84.1.2:59 52.84.1.2:1Total number of translations: 2 5.3、使用PBR控制出口ISP如果是希望控制特定的源IP地址从ISP2出去，那么通过添加明细路由就无法解决这个问题了，这种场景下可以通过PBR（策略路由）来实现这个需求，通过抓取指定的源IP地址送到ISP2的下一跳出去。 删除添加的明细路由，重新回到主备状态。 1GW(config)#no ip route 52.84.1.2 255.255.255.255 52.83.2.2 CSR2（GW），配置PRB，抓取Inside-Router的环回口从ISP2出去。 12345678910ip access-list extended TO_ISP2_ACL permit ip host 172.20.10.1 anyroute-map Route_ISP2 permit 10 match ip address TO_ISP2_ACL set ip next-hop 52.83.2.2interface GigabitEthernet1 ip address 172.20.1.254 255.255.255.0 ip policy route-map Route_ISP2 在Insid-Router上使用不用的源IP进行测试 123456789101112Inside-Router#ping 52.84.1.2Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:!!!!!Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 13&#x2F;19&#x2F;26 msInside-Router#ping 52.84.1.2 source lo 0Type escape sequence to abort.Sending 5, 100-byte ICMP Echos to 52.84.1.2, timeout is 2 seconds:Packet sent with a source address of 172.20.10.1!!!!!Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;23&#x2F;53 ms 查看转换表项，确认Inside-Router环回口地址从ISP2出去。 12345GW#show ip nat translationsPro Inside global Inside local Outside local Outside globalicmp 52.83.1.100:1 172.20.1.1:63 52.84.1.2:63 52.84.1.2:1icmp 52.83.2.100:1 172.20.10.1:62 52.84.1.2:62 52.84.1.2:1Total number of translations: 2 上述的PRB配置有一个隐患，因为PRB下一跳强制指向了ISP2的接口，如果ISP2不可达了，那么抓取的源IP无法进行切换。可以在PRB也结合SLA配置来实现自动切换。 配置SLA监控ISP2接口地址，PBR调用SLA。 12345678910111213ip sla 20 icmp-echo 52.83.2.2 source-ip 52.83.2.1 threshold 2 timeout 1000 frequency 3ip sla schedule 20 life forever start-time nowtrack 20 ip sla 20 reachabilityGW(config)#route-map Route_ISP2 permit 10GW(config-route-map)#no set ip next-hop 223.70.229.53 52.83.2.2GW(config-route-map)#set ip next-hop verify-availability 52.83.2.2 1 track 20 在Inside-Router上进行长ping测试 1Inside-Router#ping 52.84.1.2 source lo 0 re 1000000 关闭ISP-Router的G3接口，模拟ISP2故障 12ISP-Router(config)#int g3ISP-Router(config-if)#shutdown 如果为Inside-Router持续ping时，GW会认为是一个连续的会话，会继续匹配以前的NAT转换表项，从而刷新NAT转换表项（默认超时时间60s）造成不通。 12345678GW#show ip nat translations verbosePro Inside global Inside local Outside local Outside globalicmp 52.83.1.100:1 172.20.10.1:67 52.84.1.2:67 52.84.1.2:1 create: 06&#x2F;16&#x2F;21 10:18:21, use: 06&#x2F;16&#x2F;21 10:18:21, timeout: 00:00:56 Map-Id(In): 12 Appl type: none Mac-Address: 0000.0000.0000 Input-IDB: GigabitEthernet1 entry-id: 0xe94efa80, use_count:1 此时需要强制清空NAT转换表项即可。或者Inside-Router重新发起一次ping也可以正常通信，因为新的ping进行会在GW上创建新的NAT转换表项。 1GW#cle ip nat translation * 5.4、PAT地址池在实际环境中ISP提供公网地址时，互联地址和公网IP地址池可能不在一个网段。例如互联地址段是52.83.1.0/24，提供的公网地址池是52.83.100.100~52.83.100.110，在这个实验环境下模拟这个场景时需要在ISP-Router上添加去往52.83.100.0/24的路由即可。 GW 修改地址池 12345no ip nat pool ISP1_Pool 52.83.1.100 52.83.1.110 netmask 255.255.255.0no ip nat pool ISP2_Pool 52.83.2.100 52.83.2.110 netmask 255.255.255.0ip nat pool ISP1_Pool 52.83.100.100 52.83.100.110 netmask 255.255.255.0ip nat pool ISP2_Pool 52.83.200.100 52.83.200.110 netmask 255.255.255.0 ISP-Router添加去往NAT地址池的路由即可 12ip route 52.83.100.0 255.255.255.0 52.83.1.1ip route 52.83.200.0 255.255.255.0 52.83.2.1 参考文档 ISP Failover with Default Routes using IP SLA Tracking：https://www.cisco.com/c/en/us/support/docs/ip/ip-routing/200785-ISP-Failover-with-default-routes-using-I.html CONFIGURING POLICY-BASED ROUTING (PBR) WITH IP SLA TRACKING - AUTO REDIRECTING TRAFFIC：http://www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/861-cisco-router-pbr-ipsla-auto-redirect.html Cisco IP SLA — Using a Cisco Router to generate traffic：https://www.practicalnetworking.net/stand-alone/cisco-ip-sla-using-a-cisco-router-to-generate-traffic/","categories":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}],"tags":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/tags/Network/"},{"name":"NAT","slug":"NAT","permalink":"https://liuqianglong.com/tags/NAT/"},{"name":"SLA","slug":"SLA","permalink":"https://liuqianglong.com/tags/SLA/"},{"name":"PBR","slug":"PBR","permalink":"https://liuqianglong.com/tags/PBR/"}],"keywords":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}]},{"title":"AWS Session Manager","slug":"AWS-Session-Manager","date":"2021-05-11T08:42:53.000Z","updated":"2021-05-11T09:14:01.152Z","comments":true,"path":"AWS-Session-Manager.html","link":"","permalink":"https://liuqianglong.com/AWS-Session-Manager.html","excerpt":"","text":"Session Manager介绍简单来说，Session Manager有点类似于VMware的控制台功能，你可以通过AWS控制台或者AWS CLI连接到EC2上。下面是一段官方文档介绍： AWS Systems Manager 会话管理器是一个新的交互式 Shell 和 CLI，有助于提供安全、访问权限受到控制且经过审计的 Windows 和 Linux EC2 实例管理。使用会话管理器，您无需打开入站端口、管理 SSH 密钥或使用堡垒主机。并且登录的主机可以处于公有子网或者私有子网。 借助会话管理器，您可以提高安全性，集中进行访问管理并接收详细的审计。除了无需打开入站端口之外，您还可以结合使用会话管理器与 AWS NAT Gateway，以便登录处于私有子网的EC2主机。通过使用 AWS Identity and Access Management (IAM) 策略，您可以在一个中心位置授予和撤销对实例的访问权限。提供访问权限后，您可以使用 AWS CloudTrail 审计哪个用户访问了实例，并将每个命令记录到 Amazon S3 或 Amazon CloudWatch Logs。会话管理器用户只需单击并启动一个会话，然后选择一个实例，即可快速开始使用该工具。 下载安装ssm-agent查看ssm-agent的版本 12amazon-ssm-agent -versionSSM Agent version: 3.0.529.0 下载安装，或者升级到最新版的ssm-agent 1yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm 配置Session Manager创建一个日志组，用于存放用户的操作日志 编辑会话管理器的参数，设置了20分钟的超时时间，指定日志组。 默认情况下，AWS Systems Manager 没有权限操作你的实例，需要为EC2关联一个IAM角色。至少要为EC2分配AmazonSSMManagedInstanceCore这个内置策略。这里将Systems Manager操作的日志发送到CloudWatch上，所以还要关联一个CloudWatch的权限。 EC2关联IAM角色 可以点击EC2进行连接 也可以进入会话管理器界面启动会话 选中EC2进行连接 通过Session Manager进行登录，默认用户是ssm-user，可以通过 su 命令进行用户切换。 在CloudWatch上查看用户刚才输入的命令以及回显。 授权其他用户通过SSM登录创建用户，暂时不分配权限 创建策略，这里添加了一个条件，EC2需要添加资源标签SSM:Bastion-EC2，这样可以更精细化的控制用户权限。 策略json文件 123456789101112131415161718192021222324252627&#123; &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ &#123; &quot;Sid&quot;: &quot;VisualEditor0&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;ssm:GetConnectionStatus&quot;, &quot;ec2:DescribeInstances&quot;, &quot;ssm:DescribeSessions&quot;, &quot;ssm:DescribeInstanceProperties&quot; ], &quot;Resource&quot;: &quot;*&quot; &#125;, &#123; &quot;Sid&quot;: &quot;VisualEditor1&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;ssm:StartSession&quot;, &quot;Resource&quot;: &quot;*&quot;, &quot;Condition&quot;: &#123; &quot;StringLike&quot;: &#123; &quot;ssm:resourceTag/SSM&quot;: &quot;Bastion-EC2&quot; &#125; &#125; &#125; ]&#125; 用户关联权限策略，需要注意的是，修改策略之后，用户需要重新登录才会生效（或者很长时间生效，没有继续测试）。 EC2添加标签键为SSM，值为Bastion-EC2。 使用新用户登录测试 可以在管理员账号下查看日志 这里演示一下实验过程中遇到IAM授权问题如何解决，例如SSM-User直接点击EC2进行连接会有下面报错，发现是没有ssm:DescribeInstanceInformation授权，那么就可以在策略里面添加对应的权限。 在策略里面添加对应的权限。 重新连接成功。 参考资料 AWS Systems Manager：https://docs.aws.amazon.com/zh_cn/systems-manager/latest/userguide/setup-instance-profile.html Still using SSH on AWS? Check out Session Manager instead!：https://www.youtube.com/watch?v=TiaxgThfTRc 忘记堡垒机，使用 Session Manager 登录和管理 EC2 主机：https://aws.amazon.com/cn/blogs/china/session-manager-register-ec2/?nc1=b_rp","categories":[{"name":"AWS","slug":"AWS","permalink":"https://liuqianglong.com/categories/AWS/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"https://liuqianglong.com/tags/AWS/"},{"name":"SSM","slug":"SSM","permalink":"https://liuqianglong.com/tags/SSM/"}],"keywords":[{"name":"AWS","slug":"AWS","permalink":"https://liuqianglong.com/categories/AWS/"}]},{"title":"Python对文本中的特定单词进行逆序替换","slug":"Python对文本中的特定单词进行逆序替换","date":"2021-04-25T09:57:40.000Z","updated":"2021-04-25T10:50:30.391Z","comments":true,"path":"Python对文本中的特定单词进行逆序替换.html","link":"","permalink":"https://liuqianglong.com/Python%E5%AF%B9%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E7%89%B9%E5%AE%9A%E5%8D%95%E8%AF%8D%E8%BF%9B%E8%A1%8C%E9%80%86%E5%BA%8F%E6%9B%BF%E6%8D%A2.html","excerpt":"","text":"需求描述前端时间做了一个Python的小练习题，这个问题初看简单，做下来发现有不少以前没有了解的知识点，这里记录一下解决的过程。 需求：在文本里面任意给定一个单词，将这个单词逆序之后替换原来位置的单词，返回替换后的文本。 这里随意写了一段文本，需要进行逆序替换的关键字是long 12str1 = &#x27;&#x27;&#x27;long The time that my journey takes is long and the way of it long.I came out on loanglongthe chariot of the first gleam long, of light, long many a star and planet long&#x27;&#x27;&#x27; 替换后的效果如下： 12gnol The time that my journey takes is gnol and the way of it gnol.I came out on loanglongthe chariot of the first gleam gnol, of light, gnol many a star and planet gnol 推荐大家先自己做一下这个题，直接看答案就失去了很多乐趣，实在做不出来再慢慢看这个答案。 . . . 做 题 中 . . . 需求分析这个需求大致看来就2个步骤：1、将单词进行逆序；2、用逆序后的单词替换原来的单词。 将单词进行逆序方法还是比较多的，逆序之后进行替换这个需求应该很快能想到正则表达式来做替换。总体思路没有问题，下面开干。 解决步骤逆序单词首先想到的是reverse方法，将单词转换为一个列表，然后用reverse方法逆序列表，最后用join方法将列表里面的单词组合起来。 1234567891011import restr1 = &#x27;&#x27;&#x27;long The time that my journey takes is long and the way of it long.I came out on loanglongthe chariot of the first gleam long, of light, long many a star and planet long&#x27;&#x27;&#x27;keyword = &#x27;long&#x27;reverse_key = list(keyword)reverse_key.reverse()new_k1 = &#x27;&#x27;.join(reverse_key)print(new_k1) 输入结果如下： 1gnol 上面的结果确实满足了要求，但是解决的不够优雅，这里推荐用更加简洁的一种方法，这是python的slice notation的特殊用法，格式为a[i:j:s]，这里i和j都缺省了相当于复制了一份keyword，s 表示步进，默认为1，当为负数时表示从右往左取，所以keyword[::-1]即为逆序复制。 123456789import restr1 = &#x27;&#x27;&#x27;long The time that my journey takes is long and the way of it long.I came out on loanglongthe chariot of the first gleam long, of light, long many a star and planet long&#x27;&#x27;&#x27;keyword = &#x27;long&#x27;new_k1 = keyword[::-1]print(new_k1) 参考链接：https://www.cnblogs.com/mxh1099/p/5804064.html a = [0,1,2,3,4,5,6,7,8,9]b = a[i:j] 表示复制a[i]到a[j-1]，以生成新的list对象b = a[1:3] 那么，b的内容是 [1,2]当i缺省时，默认为0，即 a[:3]相当于 a[0:3]当j缺省时，默认为len(alist), 即a[1:]相当于a[1:10]当i,j都缺省时，a[:]就相当于完整复制一份a了 b = a[i:j:s]这种格式呢，i,j与上面的一样，但s表示步进，缺省为1.所以a[i:j:1]相当于a[i:j]当s&lt;0时，i缺省时，默认为-1. j缺省时，默认为-len(a)-1所以a[::-1]相当于 a[-1:-len(a)-1:-1]，也就是从最后一个元素到第一个元素复制一遍。 替换单词replace方法要做正则替换刚开始我想到了replace方法，但是使用这个方法会误伤到包含关键字的单词，例如下面我乱构造的「单词」loanglong内部的long也被做了替换，这显然不是想要的结果。我只想要对特定的单词进行替换，不是只要包含这几个字母都做替换。这里f&#39;&#123;new_k1&#125;&#39;可以使用f-string导入新的字符串。 inputs = “hello 11 word 11” 想11变成22 replacestr = inputs.replace(“11”,”22”) 123456789import restr1 = &#x27;&#x27;&#x27;long The time that my journey takes is long and the way of it long.I came out on loanglongthe chariot of the first gleam long, of light, long many a star and planet long&#x27;&#x27;&#x27;keyword = &#x27;long&#x27;new_k1 = keyword[::-1]new_str1 = str1.replace(&#x27;long&#x27;, f&#x27;&#123;new_k1&#125;&#x27;)print(new_str1) 12gnol The time that my journey takes is gnol and the way of it gnol.I came out on loanggnolthe chariot of the first gleam gnol, of light, gnol many a star and planet gnol re.sub方法replace无法解决这个问题，需要re.sub这个方法来解决问题了，这个函数就是主要用来替换字符串中的匹配项。函数有5个参数，前面3个参数是必选项。 1re.sub(pattern, repl, string, count&#x3D;0, flags&#x3D;0) pattern：表示正则中要匹配的字符串； repl：表示想要替换的字符串，既匹配出来的pattern替换为repl，这里repl可以是个函数； string：表示要被查找的原始字符串； count：表示要替换的最大次数，默认为0，表示所有匹配的都会被替换，是可选参数； flags：表示编译时用的匹配模式，例如互联大小写、多行模式等，默认为0； 下面用re.sub()方法先试一下，可以看到还是出现一样的问题，我乱构造的「单词」loanglong内部的long也被做了替换。问题出现在匹配不精确，这里我只想要匹配单词long，但是里面包含这个关键词的不想被匹配到。 12345678910import restr1 = &#x27;&#x27;&#x27;long The time that my journey takes is long and the way of it long.I came out on loanglongthe chariot of the first gleam long, of light, long many a star and planet long&#x27;&#x27;&#x27;keyword = &#x27;long&#x27;new_k1 = keyword[::-1]new_str1 = re.sub(fr&#x27;&#123;keyword&#125;&#x27;, fr&#x27;&#123;new_k1&#125;&#x27;, str1)print(new_str1) 12gnol The time that my journey takes is gnol and the way of it gnol.I came out on loanggnolthe chariot of the first gleam gnol, of light, gnol many a star and planet gnol 零宽断言这个卡了我特别长时间，因为我不知道”零宽断言“这个「高级货」技术… 这个技术涉及到比较多绕口的名词，先来看下不用这个技术会遇到什么问题。即pattern参数匹配的关键字都会被替换，这里希望描述一下单词的前后是什么内容，但是并不希望这种描述本身也被匹配进去。 所以零宽断言的作用是并不真正匹配字符串，而仅仅是匹配对应的位置，断言本身不会被匹配，因为匹配的宽度为零，所以叫零宽。断言可以理解为判断的意思，正则表达式里面有很多断言，例如^匹配字符串的开头，$匹配字符串的末尾，\\b匹配单词的边界等。 1(?&lt;&#x3D;exp1)(?&lt;!exp2)string(?&#x3D;exp3)(?!exp4) ?&lt;= 代表正回顾后发断言，它断言自身出现的位置的前面可以匹配exp1表达式。例如：(?&lt;=\\d)a，返回匹配字符串中以数字为开头的a字符。 ?= 代表正预测先行断言，表示自身出现的位置的后面可以匹配exp3表达式。例如：a(?=\\d)，返回匹配字符串中以数字为结尾的a字符。 ?&lt;! 代表负回顾后发断言，它断言自身出现的位置的前面不可以匹配exp2的表达式。例如：a(?!\\d)，返回不匹配字符串中以数字开头的a字符。 ?! 代表负预测先行断言，它断言自身出现的位置的后面不可以匹配exp4表达式。例如：a(?!\\d)，返回不匹配字符串中以数字结尾的a字符。 上面的概念第一次接触会有点绕，总的来说就是你想描述string这个单词前面一定具备某个特征、后面一定具体某个特征、前面一定没有这个特征、后面一定没有这个特征，一共就是这4种情况。 回到上面的需求，我想要匹配出单独的一个单词long，这个关键词前后有字母的不会被匹配。所以需要匹配出一个单词的边界，就是\\b。 \\b与\\B这里简单描述\\b的作用，它用来匹配一个「单词」的边界，边界近似于\\w即([0-9a-zA-Z_])。 例如下面的字符串abc!123_，这里认为abc和123_都是一个「单词」，那么它们的前后就是边界。\\B取\\b的相反即可， 12345678910import restr1 = &#x27;abc!123_&#x27;result1 = re.findall(r&#x27;\\b&#x27;, str1)result2 = re.findall(r&#x27;\\B&#x27;, str1)print(result1)print(result2) 12[&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;][&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;] 最终的代码如下： 12345678910import restr1 = &#x27;&#x27;&#x27;long The time that my journey takes is long and the way of it long.I came out on loanglongthe chariot of the first gleam long, of light, long many a star and planet long&#x27;&#x27;&#x27;keyword = &#x27;long&#x27;new_k1 = keyword[::-1]new_str1 = re.sub(fr&#x27;(?&lt;=\\b)&#123;keyword&#125;(?=\\b)&#x27;, fr&#x27;&#123;new_k1&#125;&#x27;, str1)print(new_str1) 12gnol The time that my journey takes is gnol and the way of it gnol.I came out on loanglongthe chariot of the first gleam gnol, of light, gnol many a star and planet gnol 参考资料 Python3 re模块：https://docs.python.org/3/library/re.html 正则表达式sub：https://www.jb51.net/article/170226.htm 正则表达式的\\b与\\B：https://www.jb51.net/article/138235.htm 零宽断言：https://www.shuzhiduo.com/A/QW5Y2nZBdm/","categories":[{"name":"Python","slug":"Python","permalink":"https://liuqianglong.com/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://liuqianglong.com/tags/Python/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://liuqianglong.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}],"keywords":[{"name":"Python","slug":"Python","permalink":"https://liuqianglong.com/categories/Python/"}]},{"title":"Cisco ISE Posture 结合 SSLVPN","slug":"Cisco-ISE-Posture-结合-SSLVPN","date":"2021-02-03T10:44:42.000Z","updated":"2021-04-25T10:47:59.279Z","comments":true,"path":"Cisco-ISE-Posture-结合-SSLVPN.html","link":"","permalink":"https://liuqianglong.com/Cisco-ISE-Posture-%E7%BB%93%E5%90%88-SSLVPN.html","excerpt":"","text":"描述了思科ISE Posture结合ASA SSLVPN的使用场景。员工使用AnyConnect拨号到公司内网时，需要通过思科ISE Posture检测，检测通过才能访问内网，否则网络访问受到限制。 一、Cisco ISE Posure介绍1.1、Posture简介思科的ISE Posture提供了网络准入的功能，也就是当员工的电脑只有满足合规条件时才能接入到公司网络。这里合规条件可以针对Windows和MacOS自定义各种类型的条件，以Windows为例，条件可以是：系统必须开启防火墙；系统必须开启BitLocker；系统必须拥有最新的补丁等。满足这些条件才能接入到公司网络。这里网络可以是有线、无线、VPN。这次实验场景就是当员工使用AnyConnect SSLVPN接入到公司网络时，Posture模块只会允许满足条件的电脑接入网络。 另外思科针对SSLVPN准入，也可以利用HostScan进行扫描，HostScan可以集成在AnyConnect模块中，不需要客户端安装单独的软件模块，但是检测的能力不如安装了Posture模块的客户端。针对HostSan的准入检测，后续会在其他实验演示。 1.2、Posture部署模式介绍Posture的关键是需要收集到客户端的系统信息，那么客户端上必须要有某种采集信息的代理，ISE2.4提供了3种类型的部署方式： 1.2.1 AnyConnect这种是最常用的安装方式，会在客户端上安装Posure软件模块，安装之后AnyConnect UI会多出一个模块。这种部署方式支持Posture所有的检测功能，本次实验也是这种部署方式。需要注意的是，这种部署方式需要ISE拥有Apex授权，AnyConnect拥有Apex授权。 1.2.2 Stealth AnyConnect（隐形模式）Stealth AnyConnect和AnyConnect模式几乎一样，也会在客户端上安装软件模块。如果你单独安装Stealth AnyConnect，那么它是没有UI界面的，所以叫隐形模式。但是如果你安装了AMP或者VPN模块，那么客户度会显示UI界面。所以如果你要用在SSLVPN准入上，这种模式不太适合，因为必然会出现UI界面。这种模式更加适合企业内网无线或者有线的准入，但是不想让用户看见UI界面的场景。 1.2.3 Temporal Agent（临时客户端）Temporal Agent是一个比较新的特性，它不会在客户端电脑上永久安装软件，但是显然检测能力是不如上面两种模式的。比较适合给访客和供应商作为临时的监测方式。 1.2.4 Windows Posture 支持检测特性 Temporal Agent Stealth AnyConnect AnyConnect Posture Conditions Supported Conditions: • AM Installation• Firewall Installation• Application Inventory• Hardware Inventory• USB Check• AV Installation• AV version / date• AS Installation• AS version / date• Application / File Check• Service packs / Hotfixes• Process / Registry Check Supported Conditions:• AM Installation• Firewall Installation• Application Inventory• Hardware Inventory• USB Check• AV Installation• AV version / date• AS Installation• AS version / date• Application / File Check• Service packs / Hotfixes• Process / Registry Check• Patch Management• Disk Encryption• Service Condition• Registry Condition• Dictionary Condition Supported Conditions: • AM Installation• Firewall Installation• Application Inventory• Hardware Inventory• USB Check• AV Installation• AV version / date• AS Installation• AS version / date• Application / File Check• Service packs / Hotfixes• Process / Registry Check• Patch Management• Disk Encryption• Service Condition• Registry Condition• Dictionary Condition Remediation Actions Manual Remediations Partial Automatic Remediation:File, Link, WSUS Show UI, PM activate UI, Message Text. Manual remediation not supported. Both Automatic and Manual Remediation supported Passive Reassessment None Supported Supported 1.2.5 macOS Posture 支持检测特性 Temporal Agent Stealth AnyConnect AnyConnect Posture Conditions Unsupported Conditions:• Service Condition-macOS—System Daemon check• Service Condition-macOS—Daemon or User Agent check• PM—Up to Date check• PM—Enabled check• DE—Encryption Location based check Supported Conditions:• AM Installation• Firewall Enabled• Application Inventory• Hardware Inventory• AV Installation• AV version / date• AS Installation• AS version / date• Application Check• Plist Check• File Check• Patch Management• Service packs / Hotfixes• Disk Encryption• Service Condition• Dictionary Condition Supported Conditions:• AM Installation• Firewall Enabled• Application Inventory• Hardware Inventory• AV Installation• AV version / date• AS Installation• AS version / date• Application Check• Plist Check• File Check• Patch Management• Service packs / Hotfixes• Disk Encryption• Service Condition• Dictionary Condition Remediation Actions Not Supported Unsupported: Manual, Launch program, File condition, Patch management, USB Unsupported: Manual, Launch program, File condition, Patch management, USB Passive Reassessment Not Supported Not Supported Not Supported 二、实验介绍2.1、实验注意事项 ISE Posture功能需要Apex授权，这里实验环境使用ISE的默认90天测试授权。 ASA AnyConnect也需要有Apex授权，这里实验环境依然用的自带测试授权。 客户端需要信任ISE Posture的证书，如果ISE是自签名证书，客户端需要导入ISE证书。 建议管理员离线为用户安装好ISE Posure模块，可以避免很多问题。如果重定向到安装页面，让用户自行下载会遇到各种用户无法处理的问题。 2.2、实验需求用户使用AnyConnect拨号时，需要满足下面条件才能接入，如果不满足合规条件，用户只能访问到隔离网络内的补丁服务器。如果用户电脑未安装Posture模块，当用户首次拨号成功后，页面会重定向到Posture安装页面，用户可以自行下载模块进行安装。 Windows必须开启防火墙功能。 Windows必须开启了BitLocker功能。 Windows在C盘根目录下必须要有test.txt文件。 Windows必须安装最新的补丁文件。 2.3、实验环境介绍本次实验在vSphere环境下进行，ASAv和ISE均是默认的测试授权，ASAv测试授权有限速100k的问题，所以客户端打开Posture重定向网页比较困难，这里我为客户度手动安装Posture客户端。当客户端为通过合规检查时，只能访问ISE、AD、Update Server，不能访问其他服务器。通过合规检测之后允许访问所有网络。 2.4、实验步骤配置整体分为2个部分，ISE Posture的配置和ASA SSLVPN的配置，这里聚焦的核心是ISE Posture配置。 2.4.1 ISE 配置步骤 配置Posture推送策略：当用户未安装Posture客户端拨入VPN时，需要为不同的系统推送不同的Posure Agent。 定义合规检测策略：也就是定义客户端具体需要满足的策略，只有满足这些对应的策略才能接入网络。如果用户账号具有管理员权限也可以定义修复策略，例如Posture自动为客户端打开防火墙。 配置授权策略：ISE为3种状态的客户端给与不同的授权。Unknown状态，重定向到客户端下载页面。Compliant状态，正常授权。Noncompliant状态，授权ACL限制网络访问。 2.4.2 ASA配置步骤ASA上需要注意必须启用CoA（Change of Authorization）功能。CoA提供了在身份验证通过之后更改授权信息的机制，这个场景中，当客户端从不合规状态变为合规状态后，ISE会下发新的授权信息到ASA上。思科使用UDP 1700端口，RFC5176使用UDP 3799端口。 ASA基础配置，本次实验并不讲解ASA的基础配置操作。 ASA SSLVPN配置，这里会主要介绍关于与Posture结合的特殊配置。 三、ISE Posture 配置3.1、配置ISE Posture推送策略 为客户端推送Posture模块默认是禁用的，ISE会依据授权来判断是否推送，这里保持默认即可。 从Cisco网站下载最新的文件。 下载最新的Windows合规检测模块。 AnyConnect现在是单独产品线，不能通过在线直接下载。AnyConnect官网下载地址，文件名称为anyconnect-win-4.9.05042-webdeploy-k9.pkg现在下载AnyConnect需要有CCO权限才能下载，最新版的AnyConnect不太容易找到，但是旧版本还是比较容易找到的，这里只需要4.x版本即可，并不需要最新版本。 通过本地上传AnyConnect客户端到ISE。 创建AnyConnect Posture Profile，里面定义了Posture的一些参数，可以影响客户端Posture的UI和行为。 这里开启Enable Rescan Button，客户端UI上会出现允许客户端重新扫描。 允许客户端访问所有网站。 创建AnyConnect Configure。 选择AnyConnect客户端文件、合规性检测文件、ISE Posture配置文件。 创建Client Provisioning Policy 3.2、定义合规检测策略 定义Window Patch检测策略，Posture模块可以通过Windows Update Agent或者System Center Configuration Manager Client（SCCM Client）方式检测客户端Patch是否合规。如果选择Windows Update Agent方式检测，那么需要确保客户端VPN拨号之后能访问Window更新服务器，如果企业内部署了WSUS等服务器，需要让客户端能访问到WSUS服务器。如果选择SCCM Client方式检测，同样需要确保客户端能和SCCM的DP分发点通信。 这里可以有3种类型的监测方式，Installation表示客户端是否安装了对应的程序，Enabled表示客户端是否激活了程序，Up to Date表示客户端是否拥有最新的文件。这3种监测方式时间递增，监测是否安装速度非常快，监测是否拥有最新的补丁文件速度会慢很多。如果你选择Up to Date，那么你还可以选择监测具体哪类安全级别的补丁需要安装。一般选择Important &amp; critical即可。 配置C盘必须开启BitLocker。这里检测Windows系统，使用4.x以后的合规性检测模块，加密厂商选择微软。BitLocker检测可以检测指定的盘符，也可以指定全盘开启。 配置文件检测策略，这里检测指定目录下文件是否存在。还可以检测文件的创建时间、SHA-256值等信息。 可以利用ISE自带的防火墙检测条件。 这里定义防火墙的Remediation策略，即当用户电脑不合规之后Posture采取的动作，例如可以给用户发送文本消息告诉用户具体哪个地方未合规。也可以配置响应的动作，自动帮助客户端修复。这里Posture可以自动帮助客户端打开防火墙策略，但是需要用户使用管理员账号登录，也就是用户账号要有权限能开启防火墙。 这里定义Window Patch不合规时自动修复。 配置合规条件，调用上面定义的各种条件。当BitLocker和文件检测未通过时，给客户端文本提示信息；当防火墙和Patch检测未通过时，Posture模块进行自动修复。 创建Posture Policy，调用合规条件。 ![image-20210224172153707](../image/Cisco ISE Posture with SSLVPN/image-20210224172153707.png) 3.3、配置授权策略需要为3种不同状态的客户端下发不同的授权： 未安装Posture模块的客户端下发重定向授权，让客户端根据向导安装Posture模块； 合规性检测未通过的客户端下发DACL限制网络访问，未通过检测的客户端一般只允许访问DNS、补丁服务器等。 合规性检测通过的客户端下发正常访问授权。 为没有安装Posture的客户端创建授权策略。 选择网页重定向模板为Client Provisioning(Posture)，这里使用默认的模板，你也可以去修改模板或者创建新的模板。下发重定向ACLPosture_Redirect_ACL，这里只是推送了重定向ACL的名字，所以需要在ASA上创建同名的重定向ACL内容。 创建DACL，限制未合规的客户端访问网络。 一般只允许访问DNS服务、补丁服务器，不允许访问其他内网服务器。这个ACL内容会直接推送到ASA上，并不需要在ASA上创建同名的ACL列表。DACL名字Posture_NonCompliant_ACL。 ACL内容 1234permit udp any any eq domainpermit ip any host 172.20.29.150permit ip any host 172.20.29.190deny ip any any log 创建授权策略，调用DACL。 ISE可以下发group-policy授权到ASA上，需要注意的是推送的只是group-policy名字，所以在ASA上创建的group-policy需要与ISE下发的名字完全一致。 创建网络设备，配置ASA的Radius共享密钥。 ISE创建本地用户用于AnyConnect拨号认证。 ISE创建Policy Set，这里的Conditions可以自己定义。 创建授权策略，这里条件内一定要包含PostureStatus信息，依据3种不同的PostureStatus状态给客户端对应的授权。这里我还加了一个检测条件Cisco-VPN3000·CVPN3000/ASA/PIX7x-Client-Type类型为AnyConnect-Client-SSL-VPN这个表示客户端必须使用AnyConnect客户端拨号。 四、ASA 配置4.1、ASA 基础配置 这里ASA是空配状态进行的，进行了地址初始化，配置了SSH登录，配置了ASDM登录。 12345678910111213141516171819interface GigabitEthernet0&#x2F;0 nameif inside security-level 100 ip address 172.20.29.145 255.255.255.0!interface GigabitEthernet0&#x2F;1 nameif outside security-level 0 ip address 52.94.8.18 255.255.255.0aaa authentication ssh console LOCALssh 0.0.0.0 0.0.0.0 insidehttp server enable 8443http 0 0 insideaaa authentication http console LOCALusername admin password cisco privilege 15route inside 0.0.0.0 0.0.0.0 172.20.29.1 1 通过ASDM上传AnyConnect文件到磁盘下。 1234asa# dirDirectory of disk0:&#x2F;83 -rwx 76380273 13:33:46 Feb 02 2021 anyconnect-win-4.9.05042-webdeploy-k9.pkg 4.1、SSLVPN 配置 配置webvpn，激活AnyConnect拨号。 1234webvpn enable outside anyconnect image disk0:&#x2F;anyconnect-win-4.9.05042-webdeploy-k9.pkg anyconnect enable 当客户端访问内网时，地址转换为ASA的inside接口地址。（这并不是必须的操作，这里只是为了省略解决内网路由的问题，否则内网服务器需要有路由能到客户端地址段） 123object network anyconnect_pool_object subnet 192.168.100.0 255.255.255.0nat (outside,inside) source dynamic anyconnect_pool_object interface ASA CoA和重定向列表，这应该是最不同于传统SSLVPN的配置。 COA：当ISE感知到客户端从非合规状态变为合规状态时会下发新的授权，ASA只有启用的CoA功能才能使用新的授权信息。 重定向列表：初看上去很难理解具体的含义，这里你需要重新理解ACL的permit和deny的含义。这里的deny表示抓取到的流量不会被重定向，permit表示抓取的流量会被重定向。这里的含义是去往DNS、ISE、DC的流量不会被重定向，客户端可以正常去往这些地址。但是其他所有流量都会被重定向。这里重定向列表一定要明白具体含义，否则很容易出现无限循环重定向到ISE页面。 1234567891011121314aaa-server ISE protocol radius authorize-only interim-accounting-update periodic 1 merge-dacl before-avpair dynamic-authorization aaa-server ISE (inside) host 172.20.29.140 key cisco authentication-port 1812 access-list Posture_Redirect_ACL extended deny udp any any eq domainaccess-list Posture_Redirect_ACL extended deny ip any host 172.20.29.140access-list Posture_Redirect_ACL extended deny ip any host 172.20.29.150access-list Posture_Redirect_ACL extended permit ip any any 下面就是SSLVPN的常规配置了，这里使用了SSLVPN的默认tunnel-group。 12345678910111213ip local pool sslvpn_client_pool 192.168.100.100-192.168.100.200 mask 255.255.255.255group-policy employee-group-policy internalgroup-policy employee-group-policy attributes dns-server value 172.20.29.150 vpn-tunnel-protocol ssl-client default-domain value liuqianglong.com address-pools value sslvpn_client_pooltunnel-group DefaultWEBVPNGroup general-attributes authentication-server-group ISE authorization-server-group ISE 五、AnyConnect 拨号测试5.1、客户端安装Posture模块 这里ASA没有配置隧道分隔，所以客户端所有流量都会经过AnyConnect，AnyConnect会主动触发一个HTTP流量去访问http://www.msftconnecttest.com/redirect，触发页面重定向到ISE Posture下载页面。如果配置了隧道分隔，需要用户主动访问一个内网服务器触发重定向，才会显示下面的页面。这里跟随向导前进即可。 检测是否安装AnyConnect Posture模块。 下载这个临时代理软件，这个并不是最终的ISE Posture模块，下载之后记得备份这个代理软件，因为如果安装不成功这个临时代理会自动删除，你又需要重新下载一次。 这里客户端和ISE在进行证书认证，所以如果你的ISE是自签名证书，那么需要导出ISE的自签名证书，导入到客户端才能顺利通过认证。我这里的ISE实验环境显然是自签名证书，所以需要进行导入证书操作。 检查BitLocker和File时不会检查证书，当检查Firewall和Windows Patch时需要检查证书。 客户端一定要信任ISE证书之后再进行后面的操作，否则你可能会看到各种报错界面。这是其中一种报错界面。如果客户端已经信任ISE Posture证书了，那么可以忽略后面导入证书的操作。 如果出现这个报错也是客户端不信任ISE Posture证书导致的。The requirement cannot be evaluated since you are connected to an untrusted server. Please contact your system adminitrator. 5.2、客户端导入ISE证书 在ISE上导出自签名证书，导出的是.pem文件，你可以用各种方式将文件传输到客户端上，客户端上修改文件后缀为.cer即可安装证书。 客户端需要将证书同时导入到当前用户和本地计算机。 导入到「受信任的根证书颁发机构」。 导入之后客户端会信任ISE Posure证书，即可正常通信。 代理软件继续下载ISE Posture模块。 因为ASAv测试license限速100k，所以这里我离线手动安装ISE Posture模块，在线下载Posture模块速度太慢。这个下载链接依然需要CCO账号，与上面AnyConnect下载是同一个链接。 安装成功后AnyConnect UI多出一个System Scan模块。 拨号成功后，Posure会下载ISE提供的Windows合规扫描模块。 5.3、客户端合规性检测5.3.1 合规性监测失败页面展示 客户端未开启防火墙提示页面。 客户端C盘根目录下没有test.txt这个文件提示页面。 客户端C盘未开启BitLocker提示页面。 当Window Update未通过时，因为配置了Remediation，所以系统会尝试下载最新的Patch文件。这里一定要确认客户端能访问Window Update服务器，在前面配置检测策略时已经详细说过了。 5.3.2 客户端进行合规检查时授权信息 此时客户端正在检查BitLocker是否开启，一共有5分钟的监测时间，在此期间内客户端状态为Unknow，此时客户端流量受到重定向列表管控。 查看用户获取的具体授权信息，最后一行可以看到用户获取的重定向列表。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778asa# show vpn-sessiondb detail anyconnect filter Filter criteria sort Sort Criteria | Output modifiers &lt;cr&gt;asa# show vpn-sessiondb detail anyconnectSession Type: AnyConnect DetailedUsername : ssluser Index : 36Assigned IP : 192.168.100.101 Public IP : 52.94.8.10Protocol : AnyConnect-Parent SSL-Tunnel DTLS-TunnelLicense : AnyConnect PremiumEncryption : AnyConnect-Parent: (1)none SSL-Tunnel: (1)AES-GCM-256 DTLS-Tunnel: (1)AES256Hashing : AnyConnect-Parent: (1)none SSL-Tunnel: (1)SHA384 DTLS-Tunnel: (1)SHA1Bytes Tx : 63439 Bytes Rx : 21404Pkts Tx : 128 Pkts Rx : 174Pkts Tx Drop : 0 Pkts Rx Drop : 0Group Policy : employee-group-policy Tunnel Group : DefaultWEBVPNGroupLogin Time : 10:13:17 UTC Wed Feb 3 2021Duration : 0h:00m:46sInactivity : 0h:00m:00sVLAN Mapping : N&#x2F;A VLAN : noneAudt Sess ID : ac141d9100024000601a773dSecurity Grp : noneAnyConnect-Parent Tunnels: 1SSL-Tunnel Tunnels: 1DTLS-Tunnel Tunnels: 1AnyConnect-Parent: Tunnel ID : 36.1 Public IP : 52.94.8.10 Encryption : none Hashing : none TCP Src Port : 49367 TCP Dst Port : 443 Auth Mode : userPassword Idle Time Out: 30 Minutes Idle TO Left : 29 Minutes Client OS : win Client OS Ver: 10.0.19041 Client Type : AnyConnect Client Ver : Cisco AnyConnect VPN Agent for Windows 4.9.05042 Bytes Tx : 7699 Bytes Rx : 0 Pkts Tx : 5 Pkts Rx : 0 Pkts Tx Drop : 0 Pkts Rx Drop : 0SSL-Tunnel: Tunnel ID : 36.2 Assigned IP : 192.168.100.101 Public IP : 52.94.8.10 Encryption : AES-GCM-256 Hashing : SHA384 Ciphersuite : ECDHE-ECDSA-AES256-GCM-SHA384 Encapsulation: TLSv1.2 TCP Src Port : 49379 TCP Dst Port : 443 Auth Mode : userPassword Idle Time Out: 30 Minutes Idle TO Left : 29 Minutes Client OS : Windows Client Type : SSL VPN Client Client Ver : Cisco AnyConnect VPN Agent for Windows 4.9.05042 Bytes Tx : 16382 Bytes Rx : 7801 Pkts Tx : 39 Pkts Rx : 67 Pkts Tx Drop : 0 Pkts Rx Drop : 0DTLS-Tunnel: Tunnel ID : 36.3 Assigned IP : 192.168.100.101 Public IP : 52.94.8.10 Encryption : AES256 Hashing : SHA1 Ciphersuite : AES256-SHA Encapsulation: DTLSv1.0 UDP Src Port : 58772 UDP Dst Port : 443 Auth Mode : userPassword Idle Time Out: 30 Minutes Idle TO Left : 29 Minutes Client OS : Windows Client Type : DTLS VPN Client Client Ver : Cisco AnyConnect VPN Agent for Windows 4.9.05042 Bytes Tx : 39358 Bytes Rx : 13603 Pkts Tx : 84 Pkts Rx : 107 Pkts Tx Drop : 0 Pkts Rx Drop : 0ISE Posture: Redirect URL : https:&#x2F;&#x2F;ise26.liuqianglong.com:8443&#x2F;portal&#x2F;gateway?sessionId&#x3D;ac141d9100024000601a773d&amp;portal&#x3D;27b1bc30-... Redirect ACL : Posture_Redirect_ACL 可以查看重定向列表的流量匹配情况。 12345678asa# show access-listaccess-list cached ACL log flows: total 0, denied 0 (deny-flow-max 4096) alert-interval 300access-list Posture_Redirect_ACL; 4 elements; name hash: 0xcadb04eaaccess-list Posture_Redirect_ACL line 1 extended deny udp any any eq domain (hitcnt&#x3D;4294) 0x99c9a32caccess-list Posture_Redirect_ACL line 2 extended deny ip any host 172.20.29.140 (hitcnt&#x3D;2184) 0x2bb72c86access-list Posture_Redirect_ACL line 3 extended deny ip any host 172.20.29.150 (hitcnt&#x3D;0) 0xaf71d144access-list Posture_Redirect_ACL line 4 extended permit ip any any (hitcnt&#x3D;5) 0xd1910f22 在客户端上测试网络连通性，此时客户端只能访问DNS、172.20.29.140、172.20.29.150的流量，除此之外的HTTP流量都会被重定向到ISE上。也就是只能访问重定向列表deny的流量。 5.3.3 客户端未通过合规性检测时的授权信息 此时合规性检测失败。 ASA上查看用户授权信息，最后一行可以看到DACL信息，此时客户端访问网络受到DACL的限制。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970asa# show vpn-sessiondb detail anyconnectSession Type: AnyConnect DetailedUsername : ssluser Index : 36Assigned IP : 192.168.100.101 Public IP : 52.94.8.10Protocol : AnyConnect-Parent SSL-Tunnel DTLS-TunnelLicense : AnyConnect PremiumEncryption : AnyConnect-Parent: (1)none SSL-Tunnel: (1)AES-GCM-256 DTLS-Tunnel: (1)AES256Hashing : AnyConnect-Parent: (1)none SSL-Tunnel: (1)SHA384 DTLS-Tunnel: (1)SHA1Bytes Tx : 69643 Bytes Rx : 34502Pkts Tx : 172 Pkts Rx : 240Pkts Tx Drop : 0 Pkts Rx Drop : 0Group Policy : employee-group-policy Tunnel Group : DefaultWEBVPNGroupLogin Time : 10:13:17 UTC Wed Feb 3 2021Duration : 0h:02m:44sInactivity : 0h:00m:00sVLAN Mapping : N&#x2F;A VLAN : noneAudt Sess ID : ac141d9100024000601a773dSecurity Grp : noneAnyConnect-Parent Tunnels: 1SSL-Tunnel Tunnels: 1DTLS-Tunnel Tunnels: 1AnyConnect-Parent: Tunnel ID : 36.1 Public IP : 52.94.8.10 Encryption : none Hashing : none TCP Src Port : 49367 TCP Dst Port : 443 Auth Mode : userPassword Idle Time Out: 30 Minutes Idle TO Left : 27 Minutes Client OS : win Client OS Ver: 10.0.19041 Client Type : AnyConnect Client Ver : Cisco AnyConnect VPN Agent for Windows 4.9.05042 Bytes Tx : 7699 Bytes Rx : 0 Pkts Tx : 5 Pkts Rx : 0 Pkts Tx Drop : 0 Pkts Rx Drop : 0SSL-Tunnel: Tunnel ID : 36.2 Assigned IP : 192.168.100.101 Public IP : 52.94.8.10 Encryption : AES-GCM-256 Hashing : SHA384 Ciphersuite : ECDHE-ECDSA-AES256-GCM-SHA384 Encapsulation: TLSv1.2 TCP Src Port : 49379 TCP Dst Port : 443 Auth Mode : userPassword Idle Time Out: 30 Minutes Idle TO Left : 27 Minutes Client OS : Windows Client Type : SSL VPN Client Client Ver : Cisco AnyConnect VPN Agent for Windows 4.9.05042 Bytes Tx : 16382 Bytes Rx : 7801 Pkts Tx : 39 Pkts Rx : 67 Pkts Tx Drop : 0 Pkts Rx Drop : 0 Filter Name : #ACSACL#-IP-Posture_NonCompliant_ACL-601a74ebDTLS-Tunnel: Tunnel ID : 36.3 Assigned IP : 192.168.100.101 Public IP : 52.94.8.10 Encryption : AES256 Hashing : SHA1 Ciphersuite : AES256-SHA Encapsulation: DTLSv1.0 UDP Src Port : 58772 UDP Dst Port : 443 Auth Mode : userPassword Idle Time Out: 30 Minutes Idle TO Left : 29 Minutes Client OS : Windows Client Type : DTLS VPN Client Client Ver : Cisco AnyConnect VPN Agent for Windows 4.9.05042 Bytes Tx : 45562 Bytes Rx : 26701 Pkts Tx : 128 Pkts Rx : 173 Pkts Tx Drop : 0 Pkts Rx Drop : 0 Filter Name : #ACSACL#-IP-Posture_NonCompliant_ACL-601a74eb 在ISE上可以看到通过CoA机制下发的DACL信息。 此时DACL未放行的流量，客户端无法通信。 5.3.4 客户端通过合规性检测后的授权 这里我在测试时，关闭了检测Patch，因为客户端通过ASA100k的速度下载Windows更新的速度太慢，很难出效果（我在生产环境测试可以正常工作）。同时也关闭了BitLocker检测，Window开启BitLocker是一个漫长的过程（同样在生产环境测试过可以正常工作）。这2项我都在生产环境中成功部署了，检测和修复是没有问题的。因为我们生产环境中部署了SCCM，我测试了SCCM Client检测方式也可以正常工作。 这里ISE只授权了group-policy，所以客户端会受到group-policy的权限控制。 5.3.5 ISE查看客户端合规日志 这里可以看到客户端Posture检测是否通过。 Posture检测通过。 未通过Posture检测。 六、参考资料 ISE Posture部署指南：https://community.cisco.com/t5/security-documents/ise-posture-prescriptive-deployment-guide/ta-p/3680273 ISE Posture结合AnyConnect配置：https://community.cisco.com/t5/security-documents/how-to-configure-posture-with-anyconnect-compliance-module-and/ta-p/3647768 ISE Posture配置实例：https://www.youtube.com/watch?v=xrAdpdfBZgg","categories":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}],"tags":[{"name":"SSLVPN","slug":"SSLVPN","permalink":"https://liuqianglong.com/tags/SSLVPN/"},{"name":"ISE","slug":"ISE","permalink":"https://liuqianglong.com/tags/ISE/"},{"name":"Posture","slug":"Posture","permalink":"https://liuqianglong.com/tags/Posture/"}],"keywords":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}]},{"title":"Markdown语法测试","slug":"Markdown语法测试","date":"2021-01-29T16:15:21.000Z","updated":"2021-02-04T02:44:42.258Z","comments":true,"path":"Markdown语法测试.html","link":"","permalink":"https://liuqianglong.com/Markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95.html","excerpt":"","text":"这是一篇Markdown语法渲染效果的测试文章，用来测试博客是否能正常显示Markdown语法。 一级标题二级标题三级标题四级标题五级标题六级标题印象笔记 近日，印象笔记宣布完成重组。作为Evernote已在中国独立运营近6年的品牌，印象笔记将成为由中方控股的中美合资独立运营实体，并获得红杉宽带跨境数字产业基金首轮数亿元人民币投资。 最外层 第一层嵌套 第二层嵌套 第一项 菜鸟教程学的不仅是技术更是梦想 第二项 印象笔记官网 使用 iOS 版本印象笔记如何快速保存内容？ 启用印象笔记 Widget ——印象笔记·剪贴板 复制粘贴任意内容 * 微信 滑动到 Widget 插件区域即可完成保存印象笔记·剪贴板有什么特点？ 快：开启自动模式，可以自动保存剪贴板的任意内容 一切：只要可以复制粘贴就可以保存 有序：全部保存在「我的剪贴板」笔记本并以时间来命名 三只青蛙 第一只青蛙 第二只青蛙 第三只青蛙 帐户类型 免费帐户 标准帐户 高级帐户 帐户流量 60M 1GB 10GB 设备数目 2台 无限制 无限制 当前价格 免费 ￥8.17/月 ￥12.33/月 &#123;.line-numbers,highlight12345678910111213141516171819202122#!/usr/bin/pythonimport reline = &quot;Cats are smarter than dogs&quot;matchObj = re.match( r&#x27;(.*) are (.*?) .*&#x27;, line, re.M|re.I)if matchObj: print &quot;matchObj.group() : &quot;, matchObj.group() print &quot;matchObj.group(1) : &quot;, matchObj.group(1) print &quot;matchObj.group(2) : &quot;, matchObj.group(2)else: print &quot;No match!!&quot;list1 = [&#x27;aaa&#x27;,111,(4,5),2.01]list2 = [&#x27;bbb&#x27;,333,111,3.14,(4,5)]for x in list1: if x in list2: print(x,&#x27;in list1 and list2&#x27;) else: print(x,&#x27;only in list1&#x27;) 使用 Ctrl+Alt+Del 重启电脑 文本加粗** 正常显示星号 ** 这会是 斜体 的文字这会是 斜体 的文字 这会是 粗体 的文字这会是 粗体 的文字 你也 组合 这些符号 这个文字将会被横线删除 Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b 如下，三个或者更多的 连字符 星号 下划线 &#123;highlight123``````javascript &#123;highlight=10-20&#125; &#123;highlight1 ==高亮== 这个链接用 1 作为网址变量 [RUNOOB][1].然后在文档的结尾位变量赋值（网址）[1]: http://static.runoob.com/images/runoob-logo.png 我是黑体字我是微软雅黑我是华文彩云我是红色我是绿色我是蓝色我是尺寸我是黑体，绿色，尺寸为5 文字背景颜色背景色yellow","categories":[{"name":"Tools","slug":"Tools","permalink":"https://liuqianglong.com/categories/Tools/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://liuqianglong.com/tags/Markdown/"}],"keywords":[{"name":"Tools","slug":"Tools","permalink":"https://liuqianglong.com/categories/Tools/"}]},{"title":"AWS上配置Cisco ASAv AnyConnect","slug":"AWS上配置Cisco-ASAv-AnyConnect","date":"2021-01-29T02:09:31.000Z","updated":"2021-04-25T10:43:37.552Z","comments":true,"path":"AWS上配置Cisco-ASAv-AnyConnect.html","link":"","permalink":"https://liuqianglong.com/AWS%E4%B8%8A%E9%85%8D%E7%BD%AECisco-ASAv-AnyConnect.html","excerpt":"","text":"这里演示了如何在AWS上搭建思科的SSLVPN，用来解决员工远程办公的需求。文章需要你有一定的AWS和SSLVPN基础。 1、实验简介最近一直在研究思科防火墙的SSLVPN，用来解决员工远程办公的问题。传统上一般使用ASA55XX系列的硬件防火墙做SSLVPN，使用ASAv与使用硬件防火墙功能特性几乎没有区别。ASAv在vSphere和AWS环境都可以部署。这里主要介绍一下在AWS上使用ASAv配置SSLVPN的步骤。后续会继续深入去聊SSLVPN上的高级特性。 如果你有配置ASA SSLVPN的经验，需要注意的是AWS上的特殊场景，下面是整个实验的注意事项： 在中国区如果AWS账号未经过ICP备案则无法使用TCP 80/443端口，所以需要SSLVPN修改默认的443端口号。 AWS上ASAv为客户端分配的IP地址需要进过NAT转换后才能访问，因为服务器没有回包路由。 AWS上的Windows2016无法安装ASDM，建议使用Windows2019安装ASDM软件。 如果ASAv未购买License会限速100k并且最大会话100个，用于做实验足够了但是无法用于生产环境。 2、环境介绍 本次实验在VPC内需要使用2个子网，一个公共子网用于连接跳板机，用户可以先连接Windows2016之后，在Windows2016通过SSH和ASDM连接ASAv。这里不会详细介绍AWS相关基础知识，例如如何创建VPC、如何创建公有子网、私有子网。 这是实验将会用到的公有子网，默认路由指向了IGW。 3、配置跳板机环境 在公有子网启用一台window2016，用于之后通过SSH和ASDM访问ASAv，注意实例要选择windows 2016，经过测试windows 2019 无法安装ASDM。通过AWS的快速启动一台windows 2016，可以通过输入“windows 2016”过滤查找。注意，window 2019环境无法安装Cisco ASDM。 Window2016放置在公有子网，并且开启分配公有IP功能。 4、创建ASAv实例 在AWS Marketplace搜索asav，选择ami启用即可。需要注意的是，ASAv默认eth0是ciscoasa的管理接口，管理接口只能走网管流量，不能传输数据流量，所以至少需要再添加一个eth1作为outside接口。如果需要添加更多接口，例如inside和dmz接口，可以添加「网络接口」然后附加到实例。其实在AWS环境中一个outside接口就可以运行AnyConnect环境了。 实例创建成功之后，在AWS环境下需要对实例参数进行一下配置。在AWS接口上默认会丢弃目的IP不是本接口IP的流量，所以想要ASA转发流量，必须关闭outside接口的源/目标检查。 如果客户端想要访问私有云内的服务器，那么不能直接使用ASAv分配的地址池去访问，否则服务器没有回包路由。解决方法是在ASAv做源NAT，将客户端的源IP地址转换成outside上的一个辅助IP地址（无法转换成outside接口地址）。如果是vSphere环境可以转换为outside接口地址。 防火墙outside需要公网能直接访问，所以需要一个公网地址。 公网地址关联上防火墙的outside接口。 启动之后，eth0是管理接口，首次连接时只能连接管理接口，如果想要连接其他接口可以连接之后配置。 5、ASAv基础配置 首先通过SSH连接到ASAv的管理口进行一些基础配置，这里我使用MobaXterm作为SSH客户端，下载地址会放在最后。在AWS上启动的ASAv默认用户名是admin，使用对应的密钥登录即可。 首先需要设置enable密码 123456ciscoasa&gt; enableThe enable password is not set. Please set it now.Enter Password: ****Repeat Password: ****Note: Save your configuration so that the password persists across reboots(&quot;write memory&quot; or &quot;copy running-config startup-config&quot;). 添加的eth1接口默认是down状态 12345ciscoasa# show interface ip briefInterface IP-Address OK? Method Status ProtocolInternal-Data0&#x2F;0 169.254.1.1 YES unset up upManagement0&#x2F;0 172.30.2.176 YES DHCP up upTenGigabitEthernet0&#x2F;0 172.30.1.7 YES CONFIG administratively down up 开启eth1，配置名称为outside 123interface TenGigabitEthernet0&#x2F;0 no shutdown nameif outside 想要通过ASDM连接ASAv，需要开启http服务器，并且允许http流量从管理口进入，0 0 表示不限制IP地址段，如果想要只允许192.168.1.0/24网段的http连接可以这么配置http 192.168.1.0 255.255.255.0。配置http的认证方式是本地认证，配置一个本地15级权限的用户名密码。 1234http server enablehttp 0 0 managementaaa authentication http console LOCALusername cisco password ciscoasa privilege 15 通过网页访问ASAv的管理接口地址 先下载并且安装Java环境，然后下载安装ASDM软件。 下载安装ASDM环境。 使用本地15级账号密码登录。 ASAv未导入License的情况下，限速100Kbps，最大会话100个连接。 这里通过ASDM的文件管理功能导入AnyConnect文件。 导入本地的AnyConnect客户端文件。 查看磁盘确认有客户端文件。 123ciscoasa# dirDirectory of disk0:&#x2F;86 -rwx 41077110 08:00:10 Jan 12 2021 anyconnect-win-4.6.00362-webdeploy-k9.pkg 6、ASAv配置SSLVPN 下面几乎是在AWS上ASAv的最小化配置了，这里对AnyConnect高级功能不做讨论。下面命令的含义：当客户端访问其他任何地址时，源地址转换为172.30.1.5。 12345object network asa_outside_address host 172.30.1.5object network anyconnect_pool_object subnet 192.168.1.0 255.255.255.0nat (outside,outside) source dynamic anyconnect_pool_object pat-pool asa_outside_address 默认情况下ASAv相同安全级别不能访问，流量不能从相同接口进出，这里需要开启这2个特性。 12same-security-traffic permit inter-interfacesame-security-traffic permit intra-interface 创建客户端的地址池 1ip local pool anyconnect_client_pool 192.168.1.1-192.168.1.254 mask 255.255.255.255 定义隧道分隔地址段，只有当用户访问172.30.1.0/24时，流量才会通过SSL隧道到达ASAv，去往其他网段的流量客户端依然从本地网络出去。 1access-list anyconnect_split standard permit 172.30.1.0 255.255.255.0 开启webvpn功能，修改端口为8443（AWS中国区未经过ICP备案无法使用TCP80/443），激活anyconnect拨号功能。 12345webvpn port 8443 enable outside anyconnect enable anyconnect image disk0:&#x2F;anyconnect-win-4.6.00362-webdeploy-k9.pkg 配置group-policy，允许通过网页和客户端拨入，定义流量为隧道分隔模式。 123456group-policy anyconnect internalgroup-policy anyconnect attributes vpn-tunnel-protocol ssl-client ssl-clientless split-tunnel-policy tunnelspecified split-tunnel-network-list value anyconnect_split address-pools value anyconnect_client_pool 创建一个本地账号，用于拨号测试。 123username anyuser password ciscoasausername anyuser attributes vpn-group-policy anyconnect 目前防火墙的默认路由是通过管理接口DHCP获取到的，需要将默认路由修改为outside出去。修改步骤如下： 开启outside ssh管理 将管理接口配置为静态IP，获取的默认路由会自动消失 重新通过outside接口连接ciscoasa 指定默认路由出口为outside 查看现有默认路由通过mgmt接口出去 123456ciscoasa# show routeS* 0.0.0.0 0.0.0.0 [1&#x2F;0] via 172.30.2.1, managementC 172.30.1.0 255.255.255.0 is directly connected, outsideL 172.30.1.7 255.255.255.255 is directly connected, outsideC 172.30.2.0 255.255.255.0 is directly connected, managementL 172.30.2.176 255.255.255.255 is directly connected, management 允许ssh连接outside接口 1ssh 0 0 outside 将管理接口配置为静态地址，获取的默认路由会自动消失。 12interface management 0&#x2F;0 ip address 172.30.2.176 255.255.255.0 重新通过SSH连接上outside接口之后，添加默认路由从outside接口出去。 1route outside 0 0 172.30.1.1 默认情况下AnyConnect不允许通过远程桌面拨号，需要创建一个AnyConnect Client Profile文件，编辑里面的参数。 允许通过远程桌面拨号。 如果未修改这个参数，通过远程桌面拨号后会有如下报错。 7、测试AnyConnect拨号 拨号成功后，通过SSL通道能访问到Windows2016的内网地址即可证明访问成功。Windows2016需要关闭防火墙才能ping通。 安全组也需要放行ICMP协议。 在公网上拨号成功。 去往172.30.1.0/24网段的流量会通过加密隧道访问。 测试访问内网Windows2016 1234567C:\\Users\\Administrator&gt;ping 172.30.1.131正在 Ping 172.30.1.131 具有 32 字节的数据:来自 172.30.1.131 的回复: 字节&#x3D;32 时间&#x3D;1ms TTL&#x3D;128来自 172.30.1.131 的回复: 字节&#x3D;32 时间&#x3D;1ms TTL&#x3D;128来自 172.30.1.131 的回复: 字节&#x3D;32 时间&#x3D;1ms TTL&#x3D;128来自 172.30.1.131 的回复: 字节&#x3D;32 时间&#x3D;1ms TTL&#x3D;128 这里协议默认是TLS，也就是TCP建立的连接，如果网络环境不太稳定，需要走语音和视频流量，建议使用DTLS通道，也就是UDP连接。 修改DTLS端口为8443 12webvpn dtls port 8443 在group-policy下开启DTLS 123group-policy anyconnect attributes webvpn anyconnect ssl dtls enable 重新拨号查看协议。 ASAv上查看客户端信息 123456789101112131415161718ciscoasa(config)# show vpn-sessiondb anyconnectSession Type: AnyConnectUsername : anyuser Index : 3Assigned IP : 192.168.1.1 Public IP : 52.83.196.213Protocol : AnyConnect-Parent SSL-TunnelLicense : AnyConnect PremiumEncryption : AnyConnect-Parent: (1)none SSL-Tunnel: (1)AES-GCM-256Hashing : AnyConnect-Parent: (1)none SSL-Tunnel: (1)SHA384Bytes Tx : 18613 Bytes Rx : 7928Group Policy : anyconnect Tunnel Group : DefaultWEBVPNGroupLogin Time : 09:46:43 UTC Tue Jan 12 2021Duration : 0h:01m:51sInactivity : 0h:00m:00sVLAN Mapping : N&#x2F;A VLAN : noneAudt Sess ID : ac1e02b0000030005ffd7003Security Grp : none 附一（NAT相关）tunnelall带来的问题文章的NAT配置如下，配置是隧道分隔模式倒是没有问题，但是如果想要使用tunnelall模式，让所有流量都通过ASAv抵达互联网，那么使用下面的NAT配置客户端无法访问互联网，但是可以访问内网。 1nat (outside,outside) source dynamic anyconnect_pool_object pat-pool asa_outside_address 因为EIP在关联私有IP时，相当于做的是静态一对一映射，这里EIP关联上了ASAv的outside接口，所以客户端的地址转换为辅助IP地址之后是不能转换为EIP去访问公网的，但是访问所在子网有明细路由的网络时，是不需要转换为EIP的，所以无法访问公网，可以访问内网。 ![AnyConnect](../image/AWS上配置Cisco ASAv SSLVPN/AWS-ASAv-AnyConnect-28.png) tunnelall的解决方式有两种解决方式，我更推荐第一种解决方式： 修改NAT配置，将客户端源地址转换为ASAv outside出接口地址。使用object nat的配置方式，在object下配置NAT。 123object network sslvpn_client_pool_object subnet 172.30.0.0 255.255.254.0 nat (outside,outside) dynamic interface 再添加一个EIP，将这个EIP关联到辅助IP上去。 两块网卡带来的问题上面实验都是防火墙只有一块网卡outside的情况，如果防火墙有两块网卡，一个outside接口，一个inside接口，还需要加一个twice nat的配置。 如果只有上面object nat配置，那么客户端流量访问防火墙inside所在子网时，因为所在子网时防火墙直连接口，所以流量会从inside接口出去。但是无法在object nat上配置源自outside却去往不同方向的流量。此时只能借助twice nat的配置。 利用twice nat配置时，可以将客户端地址转换为防火墙inside接口地址，也可以转换为地址池，因为此时流量并不去访问互联网。 12345object network sslvpn_client_pool_object subnet 172.30.0.0 255.255.254.0 nat (outside,outside) dynamic interface nat (outside,inside) source dynamic sslvpn_client_pool_object anyconnect_pat_pool_inside 1、mobaxterm下载地址2、Java环境下载地址","categories":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}],"tags":[{"name":"Cisco","slug":"Cisco","permalink":"https://liuqianglong.com/tags/Cisco/"},{"name":"AnyConnect","slug":"AnyConnect","permalink":"https://liuqianglong.com/tags/AnyConnect/"},{"name":"AWS","slug":"AWS","permalink":"https://liuqianglong.com/tags/AWS/"},{"name":"SSLVPN","slug":"SSLVPN","permalink":"https://liuqianglong.com/tags/SSLVPN/"}],"keywords":[{"name":"Network","slug":"Network","permalink":"https://liuqianglong.com/categories/Network/"}]}]}